// Generated by CoffeeScript 1.12.7
(function() {
  var Layout, React, Root, Route, ServerRenderer, createPage, createRoute, elem, layout, locals, models, website,
    slice = [].slice,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  React = require("react");

  models = require("../models");

  Route = require("react-router-dom").Route;

  ServerRenderer = require("./server")["default"];

  elem = function() {
    var children, tag;
    tag = arguments[0], children = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return React.createElement(tag, {
      children: children
    });
  };

  Root = (function(superClass) {
    extend(Root, superClass);

    function Root() {
      return Root.__super__.constructor.apply(this, arguments);
    }

    Root.prototype.render = function() {
      return elem("html", elem("head", elem("title", this.props.page.title + " | " + this.props.website.title)), elem("body", "%%%BODY%%%"));
    };

    return Root;

  })(React.Component);

  Layout = (function(superClass) {
    extend(Layout, superClass);

    function Layout() {
      return Layout.__super__.constructor.apply(this, arguments);
    }

    Layout.prototype.render = function() {
      return elem("div", elem(this.props.page.body));
    };

    return Layout;

  })(React.Component);

  layout = new models.Layout("test", Layout);

  createPage = function(url, title, date) {
    return new models.Page(title, "", url, layout, (function() {
      return elem("p", title);
    }), true, date, [], [], true);
  };

  createRoute = function(page) {
    return React.createElement(Route, {
      page: page,
      path: page.url,
      key: page.url,
      component: function() {
        return React.createElement(Layout, {
          page: page
        });
      }
    });
  };

  locals = {
    webpackStats: {
      compilation: {
        assets: {
          "bundle.css": {},
          "bundle.js": {}
        }
      }
    }
  };

  website = {
    title: "website.test"
  };

  describe("ServerRenderer", function() {
    var testedRenderer;
    testedRenderer = null;
    beforeEach(function() {
      return testedRenderer = new ServerRenderer(Root);
    });
    return it("renders single page", function() {
      var page, result, route;
      page = createPage("/", "Meeting", new Date("1954, Feb 20"));
      route = createRoute(page);
      result = testedRenderer.render(locals, website, [
        {
          page: page,
          route: route
        }
      ]);
      (Object.keys(result)).should.eql(["/"]);
      return result["/"].should.equal("" + "<!DOCTYPE html>\n" + "<html>" + "<head><title>Meeting | website.test</title></head>" + "<body><div data-reactroot=\"\"><p>Meeting</p></div></body>" + "</html>");
    });
  });

}).call(this);

//# sourceMappingURL=server.spec.js.map
