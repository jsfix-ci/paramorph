{
  "version": 3,
  "file": "FileSystem.spec.js",
  "sourceRoot": "../../..",
  "sources": [
    "src/platform/fake/FileSystem.spec.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nFakeFileSystem = require \"./FileSystem\"\n  .FileSystem\n\ndescribe \"FakeFileSystem\", ->\n  testedFs = null\n\n  beforeEach ->\n    testedFs = new FakeFileSystem\n\n  it \"throws when reading unexisting directory\", ->\n    testedFs.readDir '/'\n      .then (result) -> throw new Error \"expected an error got result: \"+ result\n      .catch (err) ->\n        err.should.eql new Error \"no such file or directory: /\"\n\n  it \"throws when stating unexisting directory\", ->\n    testedFs.lstat '/'\n      .then (result) -> throw new Error \"expected an error got result: \"+ result\n      .catch (err) ->\n        err.should.eql new Error \"no such file or directory: /\"\n\n  it \"throws when reading unexisting file\", ->\n    testedFs.read '/nope', 7\n      .then (result) -> throw new Error \"expected an error got result: \"+ result\n      .catch (err) ->\n        err.should.eql new Error \"no such file or directory: /nope\"\n\n  describe \"when after adding directory '/'\", ->\n    beforeEach ->\n      testedFs.createDir \"/\"\n\n    it \".readDir('/') returns empty list\", ->\n      testedFs.readDir \"/\"\n        .then (result) ->\n          result.should.eql []\n\n    it \".lstat('/') returns proper stats\", ->\n      testedFs.lstat \"/\"\n        .then (result) ->\n          result.isDirectory().should.equal true\n\n    describe \"and after adding some files directory '/'\", ->\n      beforeEach ->\n        testedFs.writeFile \"/file0\", \"content0\"\n        testedFs.writeFile \"/file1\", \"content1\"\n\n      it \".readDir('/') returns added files\", ->\n        testedFs.readDir \"/\"\n          .then (result) ->\n            result.should.eql [ \"file0\", \"file1\" ]\n\n      it \".lstat('/file0') returns proper stats\", ->\n        testedFs.lstat \"/file0\"\n          .then (result) ->\n            result.isDirectory().should.equal false\n\n      it \".lstat('/file1') returns proper stats\", ->\n        testedFs.lstat \"/file1\"\n          .then (result) ->\n            result.isDirectory().should.equal false\n\n      it \".read('/file0', 8) returns proper content\", ->\n        testedFs.read \"/file0\", 8\n          .then (result) ->\n            result.should.equal \"content0\"\n\n      it \".read('/file1', 8) returns proper content\", ->\n        testedFs.read \"/file1\", 8\n          .then (result) ->\n            result.should.equal \"content1\"\n\n      it \".read('/file1', 7) returns proper content\", ->\n        testedFs.read \"/file1\", 7\n          .then (result) ->\n            result.should.equal \"content\"\n\n    describe \"and after adding some subdirectories of '/'\", ->\n      beforeEach ->\n        testedFs.createDir \"/subdir0\"\n        testedFs.createDir \"/subdir1\"\n\n      it \".readDir('/') returns added subfolder\", ->\n        testedFs.readDir \"/\"\n          .then (result) ->\n            result.should.eql [ \"subdir0\", \"subdir1\" ]\n\n      it \".lstat('/subdir0') returns proper stats\", ->\n        testedFs.lstat \"/subdir0\"\n          .then (result) ->\n            result.isDirectory().should.equal true\n\n      it \".lstat('/subdir1') returns proper stats\", ->\n        testedFs.lstat \"/subdir1\"\n          .then (result) ->\n            result.isDirectory().should.equal true\n\n"
  ]
}