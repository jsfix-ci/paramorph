{
  "version": 3,
  "file": "FrontMatter.spec.js",
  "sourceRoot": "../..",
  "sources": [
    "src/loader/FrontMatter.spec.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "FakeFileSystem = require \"../platform/fake/FileSystem\"\n  .default\nFrontMatter = require \"./FrontMatter\"\n  .default\n\nsource = path: 'file.markdown'\n\ndescribe \"FrontMatter,\", ->\n  fileSystem = null\n  testedFrontMatter = null\n\n  beforeEach ->\n    fileSystem = new FakeFileSystem\n    testedFrontMatter = new FrontMatter fileSystem\n\n  describe \"when source file is not existent\", ->\n    it \"throws when reading a source file\", ->\n      testedFrontMatter.read source\n        .then(\n          (result) -> throw new Error \"expected rejection; got result #{result}\",\n          (error) -> error.should.eql new Error \"no such file or directory: file.markdown\",\n        )\n  describe \"when source file is empty\", ->\n    beforeEach ->\n      fileSystem.writeFile source.path, ''\n    it \"throws when reading a source file\", ->\n      testedFrontMatter.read source\n        .then(\n          (result) -> throw new Error \"expected rejection; got result #{result}\",\n          (error) -> error.should.eql new Error \"Couldn't find front matter data at the beginning of #{\n            source.path}; expected '---\\\\n'; got ''.\",\n        )\n  describe \"when source doesn't have closing front-matter delimiter\", ->\n    beforeEach ->\n      fileSystem.writeFile source.path, '---\\n\\n'\n    it \"throws when reading a source file\", ->\n      testedFrontMatter.read source\n        .then(\n          (result) -> throw new Error \"expected rejection; got result #{result}\",\n          (error) ->\n            error.should.eql new Error(\n              \"Couldn't find end of front matter data in first 2048 bytes of #{source.path}.\",\n            ),\n        )\n  describe \"when source front-matter containes invalid yaml\", ->\n    beforeEach ->\n      fileSystem.writeFile source.path, '---\\n%#@$#$@L>><\\n---\\n'\n    it \"throws when reading a source file\", ->\n      testedFrontMatter.read source\n        .then(\n          (result) -> throw new Error \"expected rejection; got result #{result}\",\n          (error) -> error.name.should.equal \"YAMLException\",\n        )\n  describe \"when source front-matter contains valid yaml\", ->\n    beforeEach ->\n      fileSystem.writeFile source.path, \"---\\ntable:\\n- entry0\\n- entry1\\n---\\n\"\n    it \"returns parsed front-matter\", ->\n      testedFrontMatter.read source\n        .then (result) -> result.should.eql table: [ \"entry0\", \"entry1\" ]\n\n"
  ]
}