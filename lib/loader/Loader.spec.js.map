{
  "version": 3,
  "file": "Loader.spec.js",
  "sourceRoot": "../..",
  "sources": [
    "src/loader/Loader.spec.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nsinon = require \"sinon\"\nFakePromise = require \"fake-promise\"\n  .FakePromise\n\nLoader = require \"./Loader\"\n  .Loader\n\n{ Layout, Include } = require \"../model\"\n\ndescribe \"Loader\", ->\n  config =\n    title: 'test'\n    timezone: 'UTC'\n    collections: []\n    baseUrl: 'http://paramorph.github.io/'\n    image: ''\n    locale: 'en_US'\n    menu: []\n  mocks =\n    projectStructure:\n      scan: sinon.stub()\n    frontMatter:\n      load: sinon.stub()\n\n  testedLoader = null\n  paramorph = null\n\n  beforeEach ->\n    testedLoader = new Loader mocks.projectStructure, mocks.frontMatter\n  afterEach ->\n    mocks.projectStructure.scan.resetBehavior()\n    mocks.projectStructure.scan.resetHistory()\n    mocks.frontMatter.load.resetBehavior()\n    mocks.frontMatter.load.resetHistory()\n\n  describe 'when loading empty project structure', ->\n    struct =\n      layouts: []\n      includes: []\n      collections: []\n\n    beforeEach ->\n      mocks.projectStructure.scan.returns FakePromise.resolve struct\n      paramorph = await testedLoader.load config\n\n    it '.load() returns empty Paramorph instance', ->\n      paramorph.layouts.should.eql {}\n      paramorph.includes.should.eql {}\n      paramorph.pages.should.eql {}\n      paramorph.categories.should.eql {}\n      paramorph.tags.should.eql {}\n      paramorph.config.should.eql config\n\n  describe 'when loading a project structure containing layouts', ->\n    struct =\n      layouts: [\n        name: \"default\"\n        path: \"./_layouts/default.ts\"\n      ]\n      includes: []\n      collections: []\n\n    beforeEach ->\n      mocks.projectStructure.scan.returns FakePromise.resolve struct\n      paramorph = await testedLoader.load config\n\n    it '.load() returns Paramorph containing layouts', ->\n      Object.keys(paramorph.layouts).should.have.length 1\n      paramorph.layouts.default.should.eql new Layout \"default\", \"./_layouts/default.ts\"\n\n  describe 'when loading a project structure containing includes', ->\n    struct =\n      layouts: [\n      ]\n      includes: [\n        name: \"Feed\"\n        path: \"./_includes/Feed.ts\"\n      ]\n      collections: []\n\n    beforeEach ->\n      mocks.projectStructure.scan.returns FakePromise.resolve struct\n      paramorph = await testedLoader.load config\n\n    it '.load() returns Paramorph containing includes', ->\n      Object.keys(paramorph.includes).should.have.length 1\n      paramorph.includes.Feed.should.eql new Include \"Feed\", \"./_includes/Feed.ts\"\n\n"
  ]
}