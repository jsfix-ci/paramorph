{
  "version": 3,
  "file": "Content.spec.js",
  "sourceRoot": "../..",
  "sources": [
    "src/components/Content.spec.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "React = require \"react\"\nReactDOMServer = require \"react-dom/server\"\n\nsinon = require \"sinon\"\n\nContentLimiter = require \"./Content\"\n  .default\n\nkey = 0\n\nelem = (name, children...) ->\n  React.createElement name, { key: key++ }, if children.length is 0 then undefined else if children.length is 1 then children[0] else children\n\nclass TestComponent extends React.Component\n  render: () -> React.createElement \"div\", { className: \"test\" }, @props.children\n\ndescribe \"Content\", ->\n  props = null\n  testedContent = null\n\n  beforeEach ->\n    props = limit: 1, respectLimit: true, test: true\n\n  renderingTests = [\n    [\n      \"empty div\"\n      elem \"div\"\n      \"<div></div>\"\n    ]\n    [\n      \"a paragraph\"\n      elem \"p\", \"Lorem ipsum dolor sit amet.\"\n      \"<p>Lorem ipsum dolor sit amet.</p>\"\n    ]\n    [\n      \"react component without children\"\n      elem TestComponent\n      \"<div class=\\\"test\\\"></div>\"\n    ]\n    [\n      \"react component with children\"\n      elem TestComponent, elem \"p\", \"Luke, I'm your father.\"\n      \"<div class=\\\"test\\\"><p>Luke, I&#x27;m your father.</p></div>\"\n    ]\n  ]\n\n  renderingTests.forEach (params) ->\n    [ testName, children, expectedResult ] = params\n\n    it \"renders #{testName}\", ->\n      testedContent = React.createElement ContentLimiter, props, children\n\n      limited = \"<div class=\\\"content\\\">#{expectedResult}</div>\"\n      ReactDOMServer.renderToStaticMarkup testedContent\n        .should.equal limited\n\n  limitTests = [\n    [\n      \"two sentences\"\n      [\n        elem \"p\", (elem \"b\", \"Ignorance\"), \" is a lack of \", (elem \"a\", \"knowledge\"), \". \"\n        \"Knowledge is a lack of ignorance.\"\n      ]\n      \"<p><b>Ignorance</b> is a lack of <a>knowledge</a>.</p>\"\n    ]\n    [\n      \"images\"\n      elem \"div\", (elem \"img\"), (elem \"img\"), (elem \"img\")\n      \"<div></div>\"\n    ]\n  ]\n\n  limitTests.forEach (params) ->\n    [ testName, children, expectedResult ] = params\n\n    describe \"when limiting #{testName}\", ->\n      beforeEach ->\n        testedContent = React.createElement ContentLimiter, props, children\n\n      it \"renders limited children\", ->\n        limited = \"<div class=\\\"content\\\">#{expectedResult}</div>\"\n        ReactDOMServer.renderToStaticMarkup testedContent\n          .should.equal limited\n\n  describe \"with mapper configured\", ->\n    mapper = null\n    testedContent = null\n\n    beforeEach ->\n      mapper = sinon.spy (node) -> elem \"strong\", \"mapped\"\n      props = Object.assign { mapper }, props\n\n    it \"maps root component\", ->\n      children = elem \"p\", \"root\"\n      testedContent = React.createElement ContentLimiter, props, children\n\n      markup = ReactDOMServer.renderToStaticMarkup testedContent\n\n      markup.should.equal \"<div class=\\\"content\\\"><strong>mapped</strong></div>\"\n\n    it \"maps children with mapper before parents\", ->\n      children = elem \"p\", (elem \"b\", \"Ignorance\"), \" is a lack of elem knowledge.\"\n      testedContent = React.createElement ContentLimiter, props, children\n\n      ReactDOMServer.renderToStaticMarkup testedContent\n\n      mapper.getCall(0).args[0].type.should.equal \"b\"\n      mapper.getCall(1).args[0].type.should.equal \"p\"\n\n    it \"maps components after limiting\", ->\n      children = elem \"p\", \".\", (elem \"b\", \"To be limited\"), \".\"\n      testedContent = React.createElement ContentLimiter, props, children\n\n      ReactDOMServer.renderToStaticMarkup testedContent\n\n      mapper.should.have.callCount 1\n\n"
  ]
}